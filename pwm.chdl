#
# entity: counter32
# description: basic pwm module with setable high and low times
# author: Timothy Duffy ( tim@timduffy.me )
#

library chdl.basic
entity counter32

component chdl.basic.counter32 as high_counter
component chdl.basic.counter32 as low_counter

port clk = clock()
port reset = reset()
port enable = logic()
port high_time = vector()
port low_time = vector()
port output = logic()

proc high_low_time_assignment = async(reset):
    high_counter.max = high_time
    low_counter.max = low_time

proc state_machine = sync(clk, reset):
    reset:
        state = idle

    high_counter.reset_count = 0
    low_counter.reset_count = 0

    fsm state: 
        idle:
            high_counter.reset_count = 1
            low_counter.reset_count = 1
            state = high
        high:
            if high_counter.done:
                low_counter.reset_count = 1
                state = low
        low:
            if low_counter.done:
                high_counter.reset_count = 1
                state = high


