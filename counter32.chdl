#
# entity: counter32
# description: basic 32 bit counter with reset and done pulse
# author: Timothy Duffy ( tim@timduffy.me )
#

library chdl.basic
entity counter32

port clk = clock()
port reset = reset()    
port reset_count = logic()
port count_max = vector()
port count_done = logic()
port reset_counter = vector(31, 0)

var reset_count_reg = logic()
var count = vector(count_max'left, count_max'right)

proc counter_decode = sync(clk, reset):
    if reset_count = '1' then
        count = zeros
    elsif count = count_max then
        count_done = '1'
    else
        count++
    end if

proc reset_count_register = sync(clk, reset):
    reset_count_reg <= reset_count

proc reset_counter = sync(clk, reset):
     if rest_count = '1' and reset_count_reg = '0':
         reset_counter++